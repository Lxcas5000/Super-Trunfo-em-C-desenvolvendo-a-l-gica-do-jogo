#include <stdio.h>
#include <string.h>

// Estrutura para representar uma carta
struct Carta {
    char estado[50];
    char codigo[20];
    char nomeCidade[50];
    int populacao;
    float area;
    float pib;
    int pontosTuristicos;
    float densidadePopulacional;
    float pibPerCapita;
};

// Função para calcular a densidade populacional
float calcularDensidadePopulacional(int populacao, float area) {
    return populacao / area;
}

// Função para calcular o PIB per capita
float calcularPIBPerCapita(float pib, int populacao) {
    return pib / populacao;
}

// Função para exibir os dados de uma carta
void exibirCarta(struct Carta c) {
    printf("\n=== %s (%s) ===\n", c.nomeCidade, c.estado);
    printf("Código: %s\n", c.codigo);
    printf("População: %d\n", c.populacao);
    printf("Área: %.2f km²\n", c.area);
    printf("PIB: %.2f bilhões\n", c.pib);
    printf("Pontos turísticos: %d\n", c.pontosTuristicos);
    printf("Densidade Populacional: %.2f hab/km²\n", c.densidadePopulacional);
    printf("PIB per capita: %.2f mil reais\n", c.pibPerCapita);
}

// Função para comparar o atributo escolhido e determinar o vencedor
void compararCartas(struct Carta c1, struct Carta c2) {
    // ATRIBUTO ESCOLHIDO: População (maior vence)
    printf("\n--- Comparação de cartas (Atributo: População) ---\n");
    printf("%s (%s): %d habitantes\n", c1.nomeCidade, c1.estado, c1.populacao);
    printf("%s (%s): %d habitantes\n", c2.nomeCidade, c2.estado, c2.populacao);

    if (c1.populacao > c2.populacao) {
        printf("\nResultado: Carta 1 (%s) venceu!\n", c1.nomeCidade);
    } else if (c2.populacao > c1.populacao) {
        printf("\nResultado: Carta 2 (%s) venceu!\n", c2.nomeCidade);
    } else {
        printf("\nResultado: Empate!\n");
    }
}

int main() {
    // Definindo as duas cartas
    struct Carta carta1 = {
        "SP",
        "C1",
        "São Paulo",
        12300000,
        1521.11,
        2300.0,
        50
    };

    struct Carta carta2 = {
        "RJ",
        "C2",
        "Rio de Janeiro",
        6748000,
        1200.27,
        900.0,
        35
    };

    // Calculando densidade populacional e PIB per capita
    carta1.densidadePopulacional = calcularDensidadePopulacional(carta1.populacao, carta1.area);
    carta1.pibPerCapita = calcularPIBPerCapita(carta1.pib, carta1.populacao);

    carta2.densidadePopulacional = calcularDensidadePopulacional(carta2.populacao, carta2.area);
    carta2.pibPerCapita = calcularPIBPerCapita(carta2.pib, carta2.populacao);

    // Exibindo os dados das cartas
    exibirCarta(carta1);
    exibirCarta(carta2);

    // Comparando as cartas
    compararCartas(carta1, carta2);

    return 0;
}